#!/usr/bin/env ruby
$LOAD_PATH.unshift "lib", "ext" if $0 == "bin/c9c"

require 'channel9'
require 'channel9/script/parser'
require 'channel9/script/transformer'

debug = ARGV.include?("-d")
ARGV.delete("-d")
debug = ARGV.include?("-dd") ? :detail : debug
ARGV.delete("-dd")
print = ARGV.include?("-p")
ARGV.delete("-p")
run = ARGV.include?("-r")
ARGV.delete("-r")
eval = ARGV.include?("-e")
ARGV.delete("-e")

if (eval)
  filename = "__eval__"
  infile = ARGV.join(" ")
  run = !run
else
  filename = ARGV[0]
  infile = File.read(filename)
end

parser = Channel9::Script::Parser.new
transformer = Channel9::Script::Transformer.new
begin
  ptree = parser.parse(infile)
  ast = transformer.apply(ptree)
  if (print)
    pp ast
  end
  code = Channel9::Stream.new
  builder = Channel9::Builder.new(code)
  context = Channel9::Script::Transformer::Context.new(filename)
  ast.compile_node(context, builder)

  if (print)
    puts code.to_json
  elsif (run)
    environment = Channel9::Environment.new(debug)
    context = Channel9::Context.new(environment, code)

    stime = Time.now
    begin
      context.channel_send(environment, nil, Channel9::CleanExitChannel)
    ensure
      etime = Time.now
      puts("Ran in #{etime - stime}s")
    end
  elsif (filename.match(/\.c9s$/))
    File.open(filename.gsub(/\.c9s$/, ".c9b"), "w") do |f|
      f.write(code.to_json)
    end
  else
    puts "Don't know what to do."
  end
rescue Parslet::ParseFailed => error
  puts error, parser.root.error_tree
end